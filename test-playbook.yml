---
- hosts: 
    # - docker_machines
    - ubuntu_servers 
  gather_facts: False  # gather facts use python, so in no python vms this should be set to no  
  tasks:
  - name: test the raw module
    raw: echo "{{ hello_message }}"
  tags:
    - test

- hosts:
    - ubuntu_servers

  pre_tasks:
  - name: Install python for Ansible
    raw: test -e /usr/bin/python || (apt-get -y update && apt-get install -y python-minimal)
    become: True
    tags:
      - system
  - name: Gathering Facts 
    setup:    # This requires python installed in the controlled machine. Obviously except raw, all aother ansible modules require python.
    tags:
      -system

  tasks:
  - name: Uninstall docker old versions
    apt:
      name: 
        - docker
        - docker-engine
        - docker.io
        - containerd
        - runc
      state: absent
    become: True
    tags:
      - docker
  - name: Install packages to allow apt to use a repository over HTTPS
    apt:
      name: 
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - software-properties-common
      state: present
      update_cache: True
    become: True
    tags:
      - docker
  - name: Add Dockerâ€™s official GPG key
    # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    become: True
  - name: Add apt repository for latest release
    apt_repository: 
      # TODO get from var; "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ lsb_release }} stable" 
      state: present
      update_cache: True
    become: True
    tags:
      - docker
  - name: Install Docker CE 
    apt:
      name: 
        - docker-ce
        - docker-ce-cli
        - containerd.io
      state: present
      update_cache: True
    become: True
    tags:
      - docker
  # sudo groupadd docker
  - name: Create "docker" group
    group:
      name: "{{ docker_group }}"
      state: present
    become: True
    tags:
      - docker
  # sudo usermod -aG docker ubuntu
  - name: Add remote  user to "docker" group
    user:
      name: "{{ ansible_user }}"
      group: "{{ docker_group }}"
      append: yes
    become: True
    register: add_user_to_docker_group
    tags:
      - docker
  - name: Reboot on user append to "docker" group
    reboot:
    when: add_user_to_docker_group.changed
  # sudo apt-get install docker-compose
  - name: Install docker-compose
    apt:
      name: docker-compose
      state: present
      update_cache: yes
    become: True
    tags:
      - docker
...